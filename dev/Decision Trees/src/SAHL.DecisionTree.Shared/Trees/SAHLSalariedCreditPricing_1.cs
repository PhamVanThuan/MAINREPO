
using Microsoft.Scripting.Hosting;
using SAHL.Core.SystemMessages;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using System;
using System.Reflection;
using System.Dynamic;
using SAHL.DecisionTree.Shared.Interfaces;
using SAHL.DecisionTree.Shared.Core;
using SAHL.DecisionTree.Shared.Helpers;

namespace SAHL.DecisionTree.Shared.Trees
{
    public class SAHLSalariedCreditPricing_1 : IDecisionTree
    {
        private int currentNodeId;
        private bool currentResult;
        private ScriptScope scope;
        private bool nodeExecutionResultedInError;
        private dynamic variablesCollection;
        private ISystemMessageCollection systemMessageCollection;

        private Dictionary<string, ISystemMessageCollection> SubtreeMessagesDictionary { get; set; }
        private List<string> SubtreeMessagesToClear { get; set; }
        
        public List<Link> NodeLinks {get; private set;}
        public Dictionary<int, Node> Nodes {get; private set;}
        public QueryGlobalsVersion GlobalsVersion { get; protected set; }

        public SAHLSalariedCreditPricing_1(ISystemMessageCollection messages)
        {
            this.NodeLinks = new List<Link>() { new Link(0,-58,-68,LinkType.DecisionNo), new Link(1,-98,-97,LinkType.DecisionNo), new Link(2,-99,-98,LinkType.DecisionNo), new Link(3,-100,-99,LinkType.DecisionNo), new Link(4,-101,-100,LinkType.DecisionNo), new Link(5,-97,-112,LinkType.DecisionNo), new Link(6,-218,-293,LinkType.DecisionNo), new Link(7,-294,-227,LinkType.DecisionNo), new Link(8,-220,-295,LinkType.DecisionNo), new Link(9,-221,-296,LinkType.DecisionNo), new Link(10,-297,-230,LinkType.DecisionNo), new Link(11,-340,-341,LinkType.DecisionYes), new Link(12,-340,-343,LinkType.DecisionNo), new Link(13,-341,-58,LinkType.DecisionYes), new Link(14,-341,-342,LinkType.DecisionNo), new Link(15,-58,-101,LinkType.DecisionYes), new Link(16,-101,-2,LinkType.DecisionYes), new Link(17,-100,-77,LinkType.DecisionYes), new Link(18,-99,-79,LinkType.DecisionYes), new Link(19,-98,-81,LinkType.DecisionYes), new Link(20,-97,-83,LinkType.DecisionYes), new Link(21,-196,-195,LinkType.DecisionNo), new Link(22,-198,-199,LinkType.DecisionNo), new Link(23,-201,-196,LinkType.DecisionYes), new Link(24,-201,-200,LinkType.DecisionNo), new Link(25,-202,-198,LinkType.DecisionYes), new Link(26,-202,-201,LinkType.DecisionNo), new Link(27,-205,-202,LinkType.Standard), new Link(28,-219,-205,LinkType.DecisionYes), new Link(29,-210,-208,LinkType.DecisionYes), new Link(30,-211,-210,LinkType.DecisionNo), new Link(31,-211,-209,LinkType.DecisionYes), new Link(32,-212,-211,LinkType.Standard), new Link(33,-210,-191,LinkType.DecisionNo), new Link(34,-209,-231,LinkType.DecisionNo), new Link(35,-208,-233,LinkType.DecisionNo), new Link(36,-218,-212,LinkType.DecisionYes), new Link(37,-191,-193,LinkType.DecisionYes), new Link(38,-191,-213,LinkType.DecisionNo), new Link(39,-193,-194,LinkType.DecisionNo), new Link(40,-234,-235,LinkType.Standard), new Link(41,-235,-236,LinkType.DecisionNo), new Link(42,-236,-237,LinkType.DecisionNo), new Link(43,-235,-239,LinkType.DecisionYes), new Link(44,-239,-238,LinkType.DecisionNo), new Link(45,-236,-242,LinkType.DecisionYes), new Link(46,-242,-243,LinkType.DecisionNo), new Link(47,-244,-245,LinkType.Standard), new Link(48,-245,-246,LinkType.DecisionNo), new Link(49,-246,-248,LinkType.DecisionNo), new Link(50,-245,-250,LinkType.DecisionYes), new Link(51,-250,-249,LinkType.DecisionNo), new Link(52,-246,-252,LinkType.DecisionYes), new Link(53,-252,-253,LinkType.DecisionNo), new Link(54,-254,-255,LinkType.Standard), new Link(55,-255,-259,LinkType.DecisionYes), new Link(56,-259,-258,LinkType.DecisionNo), new Link(57,-220,-234,LinkType.DecisionYes), new Link(58,-221,-244,LinkType.DecisionYes), new Link(59,-222,-254,LinkType.DecisionYes), new Link(60,-255,-256,LinkType.DecisionNo), new Link(61,-293,-212,LinkType.DecisionYes), new Link(62,-293,-226,LinkType.DecisionNo), new Link(63,-219,-294,LinkType.DecisionNo), new Link(64,-294,-205,LinkType.DecisionYes), new Link(65,-295,-234,LinkType.DecisionYes), new Link(66,-295,-228,LinkType.DecisionNo), new Link(67,-296,-244,LinkType.DecisionYes), new Link(68,-296,-229,LinkType.DecisionNo), new Link(69,-222,-297,LinkType.DecisionNo), new Link(70,-297,-254,LinkType.DecisionYes), new Link(71,1,-190,LinkType.Standard), new Link(72,-190,-340,LinkType.Standard), new Link(73,-250,-335,LinkType.DecisionYes), new Link(74,-252,-335,LinkType.DecisionYes), new Link(75,-239,-3,LinkType.DecisionYes), new Link(76,-242,-3,LinkType.DecisionYes), new Link(77,-198,-72,LinkType.DecisionYes), new Link(78,-196,-72,LinkType.DecisionYes), new Link(79,-193,-73,LinkType.DecisionYes), new Link(80,-208,-73,LinkType.DecisionYes), new Link(81,-209,-73,LinkType.DecisionYes), new Link(82,-259,-74,LinkType.DecisionYes), new Link(83,-2,-218,LinkType.DecisionYes), new Link(84,-2,-76,LinkType.DecisionNo), new Link(85,-77,-78,LinkType.DecisionNo), new Link(86,-77,-219,LinkType.DecisionYes), new Link(87,-79,-80,LinkType.DecisionNo), new Link(88,-79,-220,LinkType.DecisionYes), new Link(89,-81,-82,LinkType.DecisionNo), new Link(90,-81,-221,LinkType.DecisionYes), new Link(91,-83,-84,LinkType.DecisionNo), new Link(92,-83,-222,LinkType.DecisionYes)};
            this.Nodes = new Dictionary<int, Node>() {{1, new Node(1,"Start",NodeType.Start,@"")},{-58, new Node(-58,"Household Income >= Salaried Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salaried.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-68, new Node(-68,"End",NodeType.End,@"")},{-97, new Node(-97,"LTV < Salaried Category 5 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue).truncate_to(3) < (Variables::sAHomeLoans::newBusiness::credit::salaried::category5.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_   maximumloanamount = (Variables::outputs.PropertyValue).to_f * (Variables::sAHomeLoans::newBusiness::credit::salaried::category5.MaximumLoanToValue).to_f_newline_   requiredamounttolowerloanamountby = (((Variables::outputs.LoanAmount).to_f - (maximumloanamount).to_f ) + 1.0).round_newline_   maximumloantovalue = (Variables::sAHomeLoans::newBusiness::credit::salaried::category5.MaximumLoanToValue * 100).truncate_to(1)_newline_    _newline_   if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.NewPurchase then_newline_     Messages.AddWarning(Messages::sAHomeLoans::credit.NewPurchaseLTVaboveMaximum)_newline_   else_newline_     if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.Switch then_newline_       Messages.AddWarning(Messages::sAHomeLoans::credit.SwitchLTVaboveMaximum)_newline_     else_newline_       Messages.AddWarning(Messages::sAHomeLoans::credit.LoantoValueAboveCreditMaximum)_newline_  _tab_ end _newline_  end_newline_   _newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline__newline_end")},{-98, new Node(-98,"LTV < Salaried Category 4 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue).truncate_to(3) < (Variables::sAHomeLoans::newBusiness::credit::salaried::category4.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-99, new Node(-99,"LTV < Salaried Category 3 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue).truncate_to(3) < (Variables::sAHomeLoans::newBusiness::credit::salaried::category3.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-100, new Node(-100,"LTV < Salaried Category 1 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue).truncate_to(3) < (Variables::sAHomeLoans::newBusiness::credit::salaried::category1.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-101, new Node(-101,"LTV < Salaried Category 0 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue).truncate_to(3) < (Variables::sAHomeLoans::newBusiness::credit::salaried::category0.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-112, new Node(-112,"End",NodeType.End,@"")},{-218, new Node(-218,"Application Empirica >= Salaried Category 0 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salaried::category0.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-219, new Node(-219,"Application Empirica >= Salaried Category 1 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salaried::category1.MinimumApplicationEmpirica then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-220, new Node(-220,"Application Empirica >= Salaried Category 3 Minimum  Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salaried::category3.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-221, new Node(-221,"Application Empirica >= Salaried Category 4 Minimum Empirica",NodeType.Decision,@"if  Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salaried::category4.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-222, new Node(-222,"Application Empirica >= Salaried Category 5 Minimum Empirica",NodeType.Decision,@"if  Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salaried::category5.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-226, new Node(-226,"End",NodeType.End,@"")},{-227, new Node(-227,"End",NodeType.End,@"")},{-228, new Node(-228,"End",NodeType.End,@"")},{-229, new Node(-229,"End",NodeType.End,@"")},{-230, new Node(-230,"End",NodeType.End,@"")},{-340, new Node(-340,"Loan Amount > Salaried Minimum Loan Amount",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) > (Variables::sAHomeLoans::newBusiness::credit::salaried.MinimumLoanAmount).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountBelowMinimum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-341, new Node(-341,"Loan Amount < Salaried Maximum Loan Amount",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) < (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmount).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountAboveMaximum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-342, new Node(-342,"End",NodeType.End,@"")},{-343, new Node(-343,"End",NodeType.End,@"")},{-190, new Node(-190,"Calculate Loan Amount, Property Value and Loan to Value",NodeType.Process,@"Variables::outputs.EligibleApplication = false_newline_Variables::outputs.InterestRate = 0.00_newline_Variables::outputs.Alpha = false _newline_Variables::outputs.Instalment = 0.00_newline_Variables::outputs.PaymenttoIncome = 0.00_newline__newline_if (Variables::inputs.CapitaliseFees == true) then_newline_  fees = Variables::inputs.Fees_newline_  interiminterest = Variables::inputs.InterimInterest_newline_else_newline_  fees = 0.0_newline_  interiminterest = 0.0_newline_end_newline__newline_if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.Switch then_newline_      Variables::outputs.LoanAmount = Variables::inputs.CurrentMortgageLoanBalance + Variables::inputs.CashAmountRequired + fees + interiminterest_newline_      Variables::outputs.PropertyValue = Variables::inputs.EstimatedMarketValueofProperty_newline_end _newline_  _newline_if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.NewPurchase then_newline_      Variables::outputs.LoanAmount = Variables::inputs.PropertyPurchasePrice - Variables::inputs.DepositAmount_newline_      Variables::outputs.PropertyValue = Variables::inputs.PropertyPurchasePrice_newline_end _newline_  _newline_if Variables::outputs.PropertyValue == 0 then_newline_    Variables::outputs.LoantoValue = 9999_newline_    Messages.AddWarning(_sgl_quote_Property Value cannot be zero._sgl_quote_)_newline_else  _newline_    Variables::outputs.LoantoValue =  Variables::outputs.LoanAmount / Variables::outputs.PropertyValue_newline_    Variables::outputs.LoantoValue = (Variables::outputs.LoantoValue).truncate_to(3)_newline_end_newline_  _newline_  Variables::outputs.LoantoValueasPercent = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.LoantoValue * 100) + _sgl_quote_ %_sgl_quote_ _newline_  ")},{-195, new Node(-195,"End",NodeType.End,@"")},{-196, new Node(-196,"PTI < Salaried Category 1 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category1::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then _newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category1::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-198, new Node(-198,"PTI < Salaried Category 1 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category1::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline__newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category1::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-199, new Node(-199,"End",NodeType.End,@"")},{-200, new Node(-200,"End",NodeType.End,@"")},{-201, new Node(-201,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange2).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountAboveMaximum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-202, new Node(-202,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-205, new Node(-205,"Salaried Category 1",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category1.CategoryLinkRate_newline_Variables::outputs.InterestRate =Variables::sAHomeLoans::newBusiness::credit::salaried::category1.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory1_newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline_   ")},{-208, new Node(-208,"PTI < Salaried Category 0 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category0::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category0::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-209, new Node(-209,"PTI < Salaried Category 0 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category0::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_  _newline_else_newline_  _newline_    maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category0::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-210, new Node(-210,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange2).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-211, new Node(-211,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-212, new Node(-212,"Salaried Category 0",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category0.CategoryLinkRate_newline_Variables::outputs.InterestRate =Variables::sAHomeLoans::newBusiness::credit::salaried::category0.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory0_newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline_   ")},{-213, new Node(-213,"End",NodeType.End,@"")},{-231, new Node(-231,"End",NodeType.End,@"")},{-233, new Node(-233,"End",NodeType.End,@"")},{-191, new Node(-191,"Loan Amount <= Maximum Loan Amount Loan Size Range 3",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange3).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountAboveMaximum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-193, new Node(-193,"PTI < Salaried Category 0 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category0::loanSizeRange3.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category0::loanSizeRange3.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-194, new Node(-194,"End",NodeType.End,@"")},{-234, new Node(-234,"Salaried Category 3",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category3.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category3.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory3_newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline__newline_   ")},{-235, new Node(-235,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange1).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-236, new Node(-236,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange2).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountAboveMaximum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-237, new Node(-237,"End",NodeType.End,@"")},{-238, new Node(-238,"End",NodeType.End,@"")},{-239, new Node(-239,"PTI < Salaried Category 3 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(2) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category3::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then _newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category3::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-242, new Node(-242,"PTI < Salaried Category 3 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category3::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then _newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_    _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category3::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_ requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-243, new Node(-243,"End",NodeType.End,@"")},{-244, new Node(-244,"Salaried Category 4",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category4.CategoryLinkRate_newline_Variables::outputs.InterestRate =Variables::sAHomeLoans::newBusiness::credit::salaried::category4.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory4 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline_   ")},{-245, new Node(-245,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange1).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-246, new Node(-246,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange2).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountAboveMaximum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-248, new Node(-248,"End",NodeType.End,@"")},{-249, new Node(-249,"End",NodeType.End,@"")},{-250, new Node(-250,"PTI < Salaried Category 4 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category4::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category4::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-252, new Node(-252,"PTI < Salaried Category 1 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category4::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category4::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-253, new Node(-253,"End",NodeType.End,@"")},{-254, new Node(-254,"Salaried Category 5",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category5.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salaried::category5.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory5 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline_   ")},{-255, new Node(-255,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salaried.MaximumLoanAmountLoanSizeRange1).truncate_to(2)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.LoanAmountAboveMaximum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-258, new Node(-258,"End",NodeType.End,@"")},{-259, new Node(-259,"PTI < Salaried Category 1 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salaried::category5::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salaried::category5::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-256, new Node(-256,"End",NodeType.End,@"")},{-293, new Node(-293,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.CreditScoreBelowMinimum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-294, new Node(-294,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-295, new Node(-295,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.CreditScoreBelowMinimum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-296, new Node(-296,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_ Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-297, new Node(-297,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_   Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.CreditScoreBelowMinimum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-335, new Node(-335,"End",NodeType.End,@"")},{-3, new Node(-3,"End",NodeType.End,@"")},{-72, new Node(-72,"End",NodeType.End,@"")},{-73, new Node(-73,"End",NodeType.End,@"")},{-74, new Node(-74,"End",NodeType.End,@"")},{-2, new Node(-2,"Household Income >= Salaried Category 0 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salaried::category0.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-76, new Node(-76,"End",NodeType.End,@"")},{-77, new Node(-77,"Household Income >= Salaried Category 1 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salaried::category1.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-78, new Node(-78,"End",NodeType.End,@"")},{-79, new Node(-79,"Household Income >= Salaried Category 3 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salaried::category3.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-80, new Node(-80,"End",NodeType.End,@"")},{-81, new Node(-81,"Household Income >= Salaried Category 4 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salaried::category4.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-82, new Node(-82,"End",NodeType.End,@"")},{-83, new Node(-83,"Household Income >= Salaried Category 5 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salaried::category5.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salaried.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-84, new Node(-84,"End",NodeType.End,@"")}};
            this.systemMessageCollection = messages;
            SubtreeMessagesDictionary = new Dictionary<string, ISystemMessageCollection>();
            SubtreeMessagesToClear = new List<string>();
        }		
    }
}