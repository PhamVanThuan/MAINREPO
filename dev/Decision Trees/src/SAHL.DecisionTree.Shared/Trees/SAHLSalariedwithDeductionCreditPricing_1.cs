
using Microsoft.Scripting.Hosting;
using SAHL.Core.SystemMessages;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using System;
using System.Reflection;
using System.Dynamic;
using SAHL.DecisionTree.Shared.Interfaces;
using SAHL.DecisionTree.Shared.Core;
using SAHL.DecisionTree.Shared.Helpers;

namespace SAHL.DecisionTree.Shared.Trees
{
    public class SAHLSalariedwithDeductionCreditPricing_1 : IDecisionTree
    {
        private int currentNodeId;
        private bool currentResult;
        private ScriptScope scope;
        private bool nodeExecutionResultedInError;
        private dynamic variablesCollection;
        private ISystemMessageCollection systemMessageCollection;

        private Dictionary<string, ISystemMessageCollection> SubtreeMessagesDictionary { get; set; }
        private List<string> SubtreeMessagesToClear { get; set; }
        
        public List<Link> NodeLinks {get; private set;}
        public Dictionary<int, Node> Nodes {get; private set;}
        public QueryGlobalsVersion GlobalsVersion { get; protected set; }

        public SAHLSalariedwithDeductionCreditPricing_1(ISystemMessageCollection messages)
        {
            this.NodeLinks = new List<Link>() { new Link(0,-119,-118,LinkType.DecisionNo), new Link(1,-120,-119,LinkType.DecisionNo), new Link(2,-122,-120,LinkType.DecisionNo), new Link(3,-121,-122,LinkType.DecisionNo), new Link(4,-118,-81,LinkType.DecisionNo), new Link(5,-124,-126,LinkType.DecisionNo), new Link(6,-301,-247,LinkType.DecisionNo), new Link(7,-344,-345,LinkType.DecisionYes), new Link(8,-344,-347,LinkType.DecisionNo), new Link(9,-345,-121,LinkType.DecisionYes), new Link(10,-345,-346,LinkType.DecisionNo), new Link(11,-261,-257,LinkType.DecisionNo), new Link(12,-262,-261,LinkType.DecisionYes), new Link(13,-262,-268,LinkType.DecisionNo), new Link(14,-269,-271,LinkType.Standard), new Link(15,-272,-262,LinkType.DecisionNo), new Link(16,-271,-272,LinkType.DecisionNo), new Link(17,-273,-267,LinkType.DecisionNo), new Link(18,-271,-273,LinkType.DecisionYes), new Link(19,-274,-263,LinkType.DecisionNo), new Link(20,-272,-274,LinkType.DecisionYes), new Link(21,-185,-183,LinkType.DecisionYes), new Link(22,-186,-184,LinkType.DecisionYes), new Link(23,-186,-185,LinkType.DecisionNo), new Link(24,-187,-186,LinkType.Standard), new Link(25,-184,-189,LinkType.DecisionNo), new Link(26,-183,-286,LinkType.DecisionNo), new Link(27,-121,-102,LinkType.DecisionYes), new Link(28,-122,-241,LinkType.DecisionYes), new Link(29,-298,-302,LinkType.Standard), new Link(30,-302,-303,LinkType.DecisionNo), new Link(31,-302,-304,LinkType.DecisionYes), new Link(32,-305,-299,LinkType.DecisionNo), new Link(33,-303,-305,LinkType.DecisionYes), new Link(34,-310,-309,LinkType.DecisionYes), new Link(35,-311,-308,LinkType.DecisionYes), new Link(36,-310,-311,LinkType.DecisionNo), new Link(37,-308,-312,LinkType.DecisionNo), new Link(38,-309,-313,LinkType.DecisionNo), new Link(39,-325,-324,LinkType.DecisionYes), new Link(40,-324,-328,LinkType.DecisionNo), new Link(41,-354,-352,LinkType.DecisionYes), new Link(42,-352,-355,LinkType.DecisionNo), new Link(43,-365,-354,LinkType.Standard), new Link(44,-120,-90,LinkType.DecisionYes), new Link(45,-119,-91,LinkType.DecisionYes), new Link(46,-118,-95,LinkType.DecisionYes), new Link(47,-350,-325,LinkType.Standard), new Link(48,-314,-310,LinkType.Standard), new Link(49,-241,-301,LinkType.DecisionNo), new Link(50,-304,-291,LinkType.DecisionNo), new Link(51,-1,-344,LinkType.Standard), new Link(52,-324,-3,LinkType.DecisionYes), new Link(53,-352,-63,LinkType.DecisionYes), new Link(54,-308,-64,LinkType.DecisionYes), new Link(55,-309,-64,LinkType.DecisionYes), new Link(56,-304,-65,LinkType.DecisionYes), new Link(57,-305,-65,LinkType.DecisionYes), new Link(58,-183,-66,LinkType.DecisionYes), new Link(59,-184,-66,LinkType.DecisionYes), new Link(60,-274,-67,LinkType.DecisionYes), new Link(61,-273,-67,LinkType.DecisionYes), new Link(62,-261,-67,LinkType.DecisionYes), new Link(63,1,-1,LinkType.Standard), new Link(64,-2,-269,LinkType.DecisionYes), new Link(65,-2,-70,LinkType.DecisionNo), new Link(66,-72,-71,LinkType.DecisionNo), new Link(67,-72,-187,LinkType.DecisionYes), new Link(68,-73,-74,LinkType.DecisionNo), new Link(69,-73,-298,LinkType.DecisionYes), new Link(70,-76,-75,LinkType.DecisionNo), new Link(71,-76,-314,LinkType.DecisionYes), new Link(72,-77,-78,LinkType.DecisionNo), new Link(73,-77,-350,LinkType.DecisionYes), new Link(74,-80,-79,LinkType.DecisionNo), new Link(75,-80,-365,LinkType.DecisionYes), new Link(76,-81,-82,LinkType.DecisionNo), new Link(77,-81,-124,LinkType.DecisionYes), new Link(78,-185,-83,LinkType.DecisionNo), new Link(79,-303,-84,LinkType.DecisionNo), new Link(80,-311,-85,LinkType.DecisionNo), new Link(81,-354,-87,LinkType.DecisionNo), new Link(82,-325,-86,LinkType.DecisionNo), new Link(83,-88,-89,LinkType.DecisionNo), new Link(84,-90,-88,LinkType.DecisionNo), new Link(85,-90,-73,LinkType.DecisionYes), new Link(86,-88,-73,LinkType.DecisionYes), new Link(87,-91,-92,LinkType.DecisionNo), new Link(88,-92,-93,LinkType.DecisionNo), new Link(89,-91,-76,LinkType.DecisionYes), new Link(90,-92,-76,LinkType.DecisionYes), new Link(91,-95,-94,LinkType.DecisionNo), new Link(92,-94,-96,LinkType.DecisionNo), new Link(93,-95,-77,LinkType.DecisionYes), new Link(94,-94,-77,LinkType.DecisionYes), new Link(95,-99,-98,LinkType.DecisionNo), new Link(96,-97,-99,LinkType.DecisionNo), new Link(97,-124,-97,LinkType.DecisionYes), new Link(98,-97,-80,LinkType.DecisionYes), new Link(99,-99,-80,LinkType.DecisionYes), new Link(100,-100,-101,LinkType.DecisionNo), new Link(101,-102,-100,LinkType.DecisionNo), new Link(102,-102,-2,LinkType.DecisionYes), new Link(103,-100,-2,LinkType.DecisionYes), new Link(104,-241,-72,LinkType.DecisionYes), new Link(105,-301,-72,LinkType.DecisionYes)};
            this.Nodes = new Dictionary<int, Node>() {{1, new Node(1,"Start",NodeType.Start,@"")},{-118, new Node(-118,"LTV < Salaried with Deduction Category 5 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue) < (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-119, new Node(-119,"LTV < Salaried with Deduction Category 4 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue) < (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-120, new Node(-120,"LTV < Salaried with Deduction Category 3 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue) < (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3.MaximumLoanToValue).truncate_to(3)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-121, new Node(-121,"LTV < Salaried with Deduction Category 0 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue) < (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0.MaximumLoanToValue).truncate_to(3) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-122, new Node(-122,"LTV < Salaried with Deduction Category 1 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue) < (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1.MaximumLoanToValue).truncate_to(3)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-124, new Node(-124,"LTV <= Salaried with Deduction Category 10 Maximum LTV",NodeType.Decision,@"if (Variables::outputs.LoantoValue) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.MaximumLoanToValue).truncate_to(3)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_   maximumloanamount = (Variables::outputs.PropertyValue).to_f * (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.MaximumLoanToValue).to_f_newline_   requiredamounttolowerloanamountby = (((Variables::outputs.LoanAmount).to_f - (maximumloanamount).to_f ) + 1.0).round_newline_   maximumloantovalue = (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.MaximumLoanToValue * 100).truncate_to(1)_newline_    _newline_  if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.NewPurchase then_newline_     Messages.AddWarning(Messages::sAHomeLoans::credit.NewPurchaseLTVaboveMaximum)_newline_   else_newline_     Messages.AddWarning(Messages::sAHomeLoans::credit.LoantoValueAboveCreditMaximum)_newline_  end_newline__newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-126, new Node(-126,"End",NodeType.End,@"")},{-241, new Node(-241,"Application Empirica >= Salaried with Deduction Category 1 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-247, new Node(-247,"End",NodeType.End,@"")},{-344, new Node(-344,"Loan Amount >= Salaried with Deduction Minimum Loan Amount",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MinimumLoanAmount).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-345, new Node(-345,"Loan Amount <= Salaried with Deduction Maximum Loan Amount",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmount).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-346, new Node(-346,"End",NodeType.End,@"")},{-347, new Node(-347,"End",NodeType.End,@"")},{-257, new Node(-257,"End",NodeType.End,@"")},{-261, new Node(-261,"PTI < Salaried with Deduction Category 0 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0::loanSizeRange3.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0::loanSizeRange3.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-262, new Node(-262,"Loan Amount <= Maximum Loan Amount Loan Size Range 3",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange3).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-263, new Node(-263,"End",NodeType.End,@"")},{-267, new Node(-267,"End",NodeType.End,@"")},{-268, new Node(-268,"End",NodeType.End,@"")},{-269, new Node(-269,"Salaried with Deduction Category 0",NodeType.Process,@"Variables::outputs.LinkRate =Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory0_newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline_   ")},{-271, new Node(-271,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-272, new Node(-272,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange2).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-273, new Node(-273,"PTI < Salaried with Deduction Category 0 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline_  _newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_")},{-274, new Node(-274,"PTI < Salaried with Deduction Category 0 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-183, new Node(-183,"PTI < Salaried with Deduction Category 1 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_  requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline_  _newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-184, new Node(-184,"PTI < Salaried with Deduction Category 1 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then _newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_ requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-185, new Node(-185,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange2).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_  Variables::outputs.NodeResult = false_newline_end")},{-186, new Node(-186,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-187, new Node(-187,"Salaried with Deduction Category 1",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory1 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline__newline_   ")},{-189, new Node(-189,"End",NodeType.End,@"")},{-286, new Node(-286,"End",NodeType.End,@"")},{-291, new Node(-291,"End",NodeType.End,@"")},{-298, new Node(-298,"Salaried with Deduction Category 3",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory3 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline_   ")},{-299, new Node(-299,"End",NodeType.End,@"")},{-302, new Node(-302,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-303, new Node(-303,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange2).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_  Variables::outputs.NodeResult = false_newline_end")},{-304, new Node(-304,"PTI < Salaried with Deduction Category 3 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then _newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_ requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-305, new Node(-305,"PTI < Salaried with Deduction Category 3 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-308, new Node(-308,"PTI < Salaried with Deduction Category 4 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4::loanSizeRange2.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-309, new Node(-309,"PTI < Salaried with Deduction Category 4 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-310, new Node(-310,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-311, new Node(-311,"Loan Amount <= Maximum Loan Amount Loan Size Range 2",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange2).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_  Variables::outputs.NodeResult = false_newline_end")},{-312, new Node(-312,"End",NodeType.End,@"")},{-313, new Node(-313,"End",NodeType.End,@"")},{-314, new Node(-314,"Salaried with Deduction Category 4",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory4 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline__newline_   ")},{-319, new Node(-319,"End",NodeType.End,@"")},{-324, new Node(-324,"PTI < Salaried with Deduction Category 5 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then_newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-325, new Node(-325,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_  Variables::outputs.NodeResult = false_newline_end")},{-328, new Node(-328,"End",NodeType.End,@"")},{-350, new Node(-350,"Salaried with Deduction Category 5",NodeType.Process,@"Variables::outputs.LinkRate =Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory5 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline__newline_   ")},{-352, new Node(-352,"PTI < Salaried with Deduction Category 10 Maximum PTI + Variance Percentage",NodeType.Decision,@"if (Variables::outputs.PaymenttoIncome).truncate_to(3) < ((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10::newPurchase::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3) then _newline_  Variables::outputs.EligibleApplication = true_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  _newline_  maxpti = (((Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10::newPurchase::loanSizeRange1.MaximumPaymentToIncome * (Variables::sAHomeLoans::newBusiness::credit.PercentVarianceonPaymentToIncomeRatio + 1.0))).truncate_to(3)).to_f_newline_  maximumpti = (maxpti * 100).truncate_to(1)  _newline_  requiredpayment = (maxpti * Variables::inputs.HouseholdIncome).to_f_newline_  maximumloanamount = (((requiredpayment).to_f * (  ((((Variables::outputs.InterestRate / 12.0).to_f + 1.0) ** (Variables::inputs.TermInMonth).to_f) - 1.0) / ((Variables::outputs.InterestRate / 12.0).to_f * ((1.0 + (Variables::outputs.InterestRate / 12.0).to_f) ** (Variables::inputs.TermInMonth).to_f )) )) - 1).round_newline_requiredhouseholdincome = (((Variables::outputs.Instalment).to_f / maxpti.to_f).to_f + 1.0).round_newline__newline_  Messages.AddWarning(Messages::sAHomeLoans::credit.PTIaboveMaximum)_newline__newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-354, new Node(-354,"Loan Amount <= Maximum Loan Amount Loan Size Range 1",NodeType.Decision,@"if (Variables::outputs.LoanAmount).truncate_to(2) <= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction.MaximumLoanAmountLoanSizeRange1).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.LoanAmountAboveMaximum)_newline_ Variables::outputs.NodeResult = false_newline_end")},{-355, new Node(-355,"End",NodeType.End,@"")},{-365, new Node(-365,"Salaried with Deduction Category 10",NodeType.Process,@"Variables::outputs.LinkRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.CategoryLinkRate_newline_Variables::outputs.InterestRate = Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.CategoryLinkRate + Variables::sAHomeLoans::rates.JIBAR3MonthRounded_newline_Variables::outputs.CreditMatrixCategory = Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory10 _newline_Variables::outputs.Alpha = false_newline__newline_Variables::outputs.Instalment = (((Variables::outputs.InterestRate / 12.0) + ((Variables::outputs.InterestRate / 12.0) / ((((Variables::outputs.InterestRate / 12.0) + 1.0) ** Variables::inputs.TermInMonth) - 1))) * Variables::outputs.LoanAmount).truncate_to(2)_newline_Variables::outputs.PaymenttoIncome = (Variables::outputs.Instalment / Variables::inputs.HouseholdIncome).truncate_to(3)_newline__newline_Variables::outputs.InterestRateasPercent =  _sgl_quote_%.2f_sgl_quote_ % ((Variables::outputs.InterestRate).truncate_to(4) * 100.0) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.PaymenttoIncomeasPercent = _sgl_quote_%.1f_sgl_quote_ % (Variables::outputs.PaymenttoIncome * 100.0).truncate_to(1) + _sgl_quote_%_sgl_quote__newline_Variables::outputs.InstallmentinRands = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.Instalment).truncate_to(2)_newline__newline__newline__newline_   ")},{-301, new Node(-301,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-3, new Node(-3,"End",NodeType.End,@"")},{-63, new Node(-63,"End",NodeType.End,@"")},{-64, new Node(-64,"End",NodeType.End,@"")},{-65, new Node(-65,"End",NodeType.End,@"")},{-66, new Node(-66,"End",NodeType.End,@"")},{-67, new Node(-67,"End",NodeType.End,@"")},{-1, new Node(-1,"Calculate Loan Amount, Property Value and Loan to Value",NodeType.Process,@"Variables::outputs.EligibleApplication = false_newline_Variables::outputs.InterestRate = 0.00_newline_Variables::outputs.Alpha = false _newline_Variables::outputs.Instalment = 0.00_newline_Variables::outputs.PaymenttoIncome = 0.00_newline__newline_if (Variables::inputs.CapitaliseFees == true) then_newline_  fees = Variables::inputs.Fees_newline_  interiminterest = Variables::inputs.InterimInterest_newline_else_newline_  fees = 0.0_newline_  interiminterest = 0.0_newline_end_newline__newline_if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.Switch then_newline_      Variables::outputs.LoanAmount = Variables::inputs.CurrentMortgageLoanBalance + Variables::inputs.CashAmountRequired + fees + interiminterest_newline_      Variables::outputs.PropertyValue = Variables::inputs.EstimatedMarketValueofProperty_newline_end _newline_  _newline_if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.NewPurchase then_newline_      Variables::outputs.LoanAmount = Variables::inputs.PropertyPurchasePrice - Variables::inputs.DepositAmount_newline_      Variables::outputs.PropertyValue = Variables::inputs.PropertyPurchasePrice_newline_end _newline_  _newline_if Variables::outputs.PropertyValue == 0 then_newline_    Variables::outputs.LoantoValue = 9999_newline_    Messages.AddError(_sgl_quote_Property Value cannot be zero._sgl_quote_)_newline_else  _newline_    Variables::outputs.LoantoValue =  Variables::outputs.LoanAmount / Variables::outputs.PropertyValue_newline_  _tab_Variables::outputs.LoantoValue = Variables::outputs.LoantoValue.truncate_to(3)_newline_end_newline_  _newline_  Variables::outputs.LoantoValueasPercent = _sgl_quote_%.2f_sgl_quote_ % (Variables::outputs.LoantoValue * 100) + _sgl_quote_ %_sgl_quote_ ")},{-2, new Node(-2,"Household Income >= Salaried with Deduction Category 0 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-70, new Node(-70,"End",NodeType.End,@"")},{-71, new Node(-71,"End",NodeType.End,@"")},{-72, new Node(-72,"Household Income >= Salaried with Deduction Category 1 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category1.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-73, new Node(-73,"Household Income >= Salaried with Deduction Category 3 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-74, new Node(-74,"End",NodeType.End,@"")},{-75, new Node(-75,"End",NodeType.End,@"")},{-76, new Node(-76,"Household Income >= Salaried with Deduction Category 4 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-77, new Node(-77,"Household Income >= Salaried with Deduction Category 5 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-78, new Node(-78,"End",NodeType.End,@"")},{-79, new Node(-79,"End",NodeType.End,@"")},{-80, new Node(-80,"Household Income >= Salaried with Deduction Category 10 Minimum Household Income",NodeType.Decision,@"if (Variables::inputs.HouseholdIncome).truncate_to(2) >= (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.MinimumHouseholdIncome).truncate_to(2) then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.HouseholdIncomeBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end_newline__newline_ ")},{-81, new Node(-81,"Application is New Purcahse",NodeType.Decision,@"if (Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.NewPurchase)_newline_  Variables::outputs.NodeResult = true_newline_else_newline_ _newline_   maximumloanamount = (Variables::outputs.PropertyValue).to_f * (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.MaximumLoanToValue).to_f_newline_   requiredamounttolowerloanamountby = (((Variables::outputs.LoanAmount).to_f - (maximumloanamount).to_f ) + 1.0).round_newline_   maximumloantovalue = (Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.MaximumLoanToValue * 100).truncate_to(1)_newline_    _newline_    if Variables::inputs.ApplicationType == Enumerations::sAHomeLoans::mortgageLoanApplicationType.Switch then_newline_       Messages.AddWarning(Messages::sAHomeLoans::credit.SwitchLTVaboveMaximum)_newline_    else_newline_       Messages.AddWarning(Messages::sAHomeLoans::credit.LoantoValueAboveCreditMaximum)_newline_  _tab_end _newline_  _newline_  Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-82, new Node(-82,"End",NodeType.End,@"")},{-83, new Node(-83,"End",NodeType.End,@"")},{-84, new Node(-84,"End",NodeType.End,@"")},{-85, new Node(-85,"End",NodeType.End,@"")},{-86, new Node(-86,"End",NodeType.End,@"")},{-87, new Node(-87,"End",NodeType.End,@"")},{-88, new Node(-88,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-89, new Node(-89,"End",NodeType.End,@"")},{-90, new Node(-90,"Application Empirica >= Salaried with Deduction Category 3 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >=Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category3.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-91, new Node(-91,"Application Empirica >= Salaried with Deduction Category 4 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category4.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-92, new Node(-92,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-93, new Node(-93,"End",NodeType.End,@"")},{-94, new Node(-94,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-95, new Node(-95,"Application Empirica >= Salaried with Deduction Category 5 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category5.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-96, new Node(-96,"End",NodeType.End,@"")},{-97, new Node(-97,"Application Empirica >= Salaried with Deduction Category 10 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category10.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-98, new Node(-98,"End",NodeType.End,@"")},{-99, new Node(-99,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-100, new Node(-100,"Application Empirica = -999",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica == -999_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Messages.AddWarning(Messages::sAHomeLoans::credit::salariedwithDeduction.CreditScoreBelowMinimum)_newline_    Variables::outputs.EligibleApplication = false_newline_  Variables::outputs.NodeResult = false_newline_end")},{-101, new Node(-101,"End",NodeType.End,@"")},{-102, new Node(-102,"Application Empirica >= Salaried with Deduction Category 0 Minimum Empirica",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= Variables::sAHomeLoans::newBusiness::credit::salariedwithDeduction::category0.MinimumApplicationEmpirica_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")}};
            this.systemMessageCollection = messages;
            SubtreeMessagesDictionary = new Dictionary<string, ISystemMessageCollection>();
            SubtreeMessagesToClear = new List<string>();
        }		
    }
}