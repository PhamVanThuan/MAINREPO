
using Microsoft.Scripting.Hosting;
using SAHL.Core.SystemMessages;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using System;
using System.Reflection;
using System.Dynamic;
using SAHL.DecisionTree.Shared.Interfaces;
using SAHL.DecisionTree.Shared.Core;
using SAHL.DecisionTree.Shared.Helpers;

namespace SAHL.DecisionTree.Shared.Trees
{
    public class SAHLOriginationPricingforRisk_1 : IDecisionTree
    {
        private int currentNodeId;
        private bool currentResult;
        private ScriptScope scope;
        private bool nodeExecutionResultedInError;
        private dynamic variablesCollection;
        private ISystemMessageCollection systemMessageCollection;

        private Dictionary<string, ISystemMessageCollection> SubtreeMessagesDictionary { get; set; }
        private List<string> SubtreeMessagesToClear { get; set; }
        
        public List<Link> NodeLinks {get; private set;}
        public Dictionary<int, Node> Nodes {get; private set;}
        public QueryGlobalsVersion GlobalsVersion { get; protected set; }

        public SAHLOriginationPricingforRisk_1(ISystemMessageCollection messages)
        {
            this.NodeLinks = new List<Link>() { new Link(0,1,-80,LinkType.Standard), new Link(1,-2,-11,LinkType.DecisionYes), new Link(2,-3,-12,LinkType.DecisionYes), new Link(3,-4,-13,LinkType.DecisionYes), new Link(4,-5,-14,LinkType.DecisionYes), new Link(5,-7,-43,LinkType.DecisionYes), new Link(6,-2,-3,LinkType.DecisionNo), new Link(7,-3,-4,LinkType.DecisionNo), new Link(8,-4,-5,LinkType.DecisionNo), new Link(9,-5,-6,LinkType.DecisionNo), new Link(10,-6,-7,LinkType.DecisionNo), new Link(11,-7,-8,LinkType.DecisionNo), new Link(12,-8,-9,LinkType.DecisionNo), new Link(13,-10,-20,LinkType.DecisionNo), new Link(14,-12,-22,LinkType.DecisionYes), new Link(15,-11,-21,LinkType.DecisionYes), new Link(16,-11,-21,LinkType.DecisionNo), new Link(17,-12,-22,LinkType.DecisionNo), new Link(18,-13,-23,LinkType.DecisionYes), new Link(19,-13,-23,LinkType.DecisionNo), new Link(20,-14,-24,LinkType.DecisionYes), new Link(21,-14,-24,LinkType.DecisionNo), new Link(22,-16,-28,LinkType.DecisionYes), new Link(23,-26,-29,LinkType.DecisionYes), new Link(24,-27,-30,LinkType.DecisionYes), new Link(25,-16,-26,LinkType.DecisionNo), new Link(26,-26,-27,LinkType.DecisionNo), new Link(27,-27,-30,LinkType.DecisionNo), new Link(28,-9,-10,LinkType.DecisionNo), new Link(29,-42,-37,LinkType.DecisionNo), new Link(30,-41,-93,LinkType.DecisionNo), new Link(31,-40,-41,LinkType.DecisionNo), new Link(32,-42,-37,LinkType.DecisionYes), new Link(33,-41,-38,LinkType.DecisionYes), new Link(34,-40,-39,LinkType.DecisionYes), new Link(35,-43,-16,LinkType.DecisionYes), new Link(36,-43,-44,LinkType.DecisionNo), new Link(37,-44,-40,LinkType.DecisionYes), new Link(38,-44,-45,LinkType.DecisionNo), new Link(39,-47,-95,LinkType.DecisionNo), new Link(40,-49,-47,LinkType.DecisionNo), new Link(41,-49,-50,LinkType.DecisionYes), new Link(42,-47,-51,LinkType.DecisionYes), new Link(43,-46,-52,LinkType.DecisionYes), new Link(44,-46,-52,LinkType.DecisionNo), new Link(45,-56,-53,LinkType.DecisionNo), new Link(46,-56,-53,LinkType.DecisionYes), new Link(47,-57,-56,LinkType.DecisionNo), new Link(48,-57,-54,LinkType.DecisionYes), new Link(49,-58,-57,LinkType.DecisionNo), new Link(50,-58,-55,LinkType.DecisionYes), new Link(51,-59,-48,LinkType.DecisionNo), new Link(52,-59,-49,LinkType.DecisionYes), new Link(53,-60,-59,LinkType.DecisionNo), new Link(54,-60,-58,LinkType.DecisionYes), new Link(55,-8,-60,LinkType.DecisionYes), new Link(56,-62,-63,LinkType.DecisionYes), new Link(57,-63,-64,LinkType.DecisionNo), new Link(58,-63,-66,LinkType.DecisionYes), new Link(59,-64,-67,LinkType.DecisionYes), new Link(60,-72,-71,LinkType.DecisionYes), new Link(61,-73,-70,LinkType.DecisionYes), new Link(62,-72,-73,LinkType.DecisionNo), new Link(63,-74,-69,LinkType.DecisionNo), new Link(64,-74,-69,LinkType.DecisionYes), new Link(65,-73,-97,LinkType.DecisionNo), new Link(66,-62,-75,LinkType.DecisionNo), new Link(67,-75,-72,LinkType.DecisionYes), new Link(68,-75,-61,LinkType.DecisionNo), new Link(69,-77,-78,LinkType.DecisionYes), new Link(70,-78,-79,LinkType.DecisionNo), new Link(71,-78,-81,LinkType.DecisionYes), new Link(72,-79,-82,LinkType.DecisionYes), new Link(73,-87,-86,LinkType.DecisionYes), new Link(74,-88,-85,LinkType.DecisionYes), new Link(75,-87,-88,LinkType.DecisionNo), new Link(76,-89,-84,LinkType.DecisionNo), new Link(77,-89,-84,LinkType.DecisionYes), new Link(78,-88,-100,LinkType.DecisionNo), new Link(79,-77,-90,LinkType.DecisionNo), new Link(80,-90,-87,LinkType.DecisionYes), new Link(81,-90,-76,LinkType.DecisionNo), new Link(82,-9,-62,LinkType.DecisionYes), new Link(83,-64,-67,LinkType.DecisionNo), new Link(84,-10,-77,LinkType.DecisionYes), new Link(85,-79,-82,LinkType.DecisionNo), new Link(86,-80,-83,LinkType.DecisionYes), new Link(87,-80,-2,LinkType.DecisionNo), new Link(88,-91,-92,LinkType.DecisionYes), new Link(89,-91,-92,LinkType.DecisionNo), new Link(90,-6,-91,LinkType.DecisionYes), new Link(91,-93,-94,LinkType.DecisionYes), new Link(92,-93,-42,LinkType.DecisionNo), new Link(93,-95,-96,LinkType.DecisionYes), new Link(94,-95,-46,LinkType.DecisionNo), new Link(95,-97,-98,LinkType.DecisionYes), new Link(96,-97,-74,LinkType.DecisionNo), new Link(97,-100,-99,LinkType.DecisionYes), new Link(98,-100,-89,LinkType.DecisionNo)};
            this.Nodes = new Dictionary<int, Node>() {{1, new Node(1,"Start",NodeType.Start,@"")},{-2, new Node(-2,"Application Credit Matrix Category == Salaried Category 0 ",NodeType.Decision,@"Variables::outputs.LinkRateAdjustment = 0_newline__newline_if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory0 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-3, new Node(-3,"Application Credit Matrix Category == Salaried Category 1",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedCategory1 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-4, new Node(-4,"Application Credit Matrix Category == Salaried with Deduction Category 4",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory4 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-5, new Node(-5,"Application Credit Matrix Category == Salaried with Deduction 5",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory5 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-6, new Node(-6,"Application Credit Matrix Category == Salaried with Deduction 10",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.SalariedwithDeductionCategory10 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-7, new Node(-7,"Application Credit Matrix Category == Alpha Category 6",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.AlphaCategory6 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-8, new Node(-8,"Application Credit Matrix Category == Alpha Category 7",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.AlphaCategory7 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-9, new Node(-9,"Application Credit Matrix Category == Alpha Category 8",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.AlphaCategory8 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-10, new Node(-10,"Application Credit Matrix Category == Alpha Category 9",NodeType.Decision,@"if Variables::inputs.CreditMatrixCategory == Enumerations::sAHomeLoans::credit::creditMatrixCategory.AlphaCategory9 then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.LinkRateAdjustment = 0.0_newline_  Variables::outputs.NodeResult = false_newline_end")},{-11, new Node(-11,"Application Empirica >= 575 and Application Empirica <= 595",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 595 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-12, new Node(-12,"Application Empirica >= 575 and Application Empirica <=595",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 595 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-13, new Node(-13,"Application Empirica >= 575 and Application Empirica <=600",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 600 then_newline_  Variables::outputs.LinkRateAdjustment = 0.003_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-14, new Node(-14,"Application Empirica >= 575 and Application Empirica <=600",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 600 then_newline_  Variables::outputs.LinkRateAdjustment = 0.003_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-16, new Node(-16,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-20, new Node(-20,"End",NodeType.End,@"")},{-21, new Node(-21,"End",NodeType.End,@"")},{-22, new Node(-22,"End",NodeType.End,@"")},{-23, new Node(-23,"End",NodeType.End,@"")},{-24, new Node(-24,"End",NodeType.End,@"")},{-26, new Node(-26,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-27, new Node(-27,"Application Empirica >= 600 and Application Empirica <=609",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 600 and Variables::inputs.ApplicationEmpirica <= 609 then_newline_  Variables::outputs.LinkRateAdjustment = 0.012_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-28, new Node(-28,"End",NodeType.End,@"")},{-29, new Node(-29,"End",NodeType.End,@"")},{-30, new Node(-30,"End",NodeType.End,@"")},{-37, new Node(-37,"End",NodeType.End,@"")},{-38, new Node(-38,"End",NodeType.End,@"")},{-39, new Node(-39,"End",NodeType.End,@"")},{-40, new Node(-40,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-41, new Node(-41,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-42, new Node(-42,"Application Empirica >= 575 and Application Empirica <=594",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 594 then_newline_  Variables::outputs.LinkRateAdjustment = 0.010_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-43, new Node(-43,"Household Income Type = Salaried",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.Salaried then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-44, new Node(-44,"Household Income Type = Salaried with Deduction",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.SalariedwithDeduction then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-45, new Node(-45,"End",NodeType.End,@"")},{-46, new Node(-46,"Application Empirica >= 575 and Application Empirica <=594",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 594 then_newline_  Variables::outputs.LinkRateAdjustment = 0.010_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-47, new Node(-47,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-48, new Node(-48,"End",NodeType.End,@"")},{-49, new Node(-49,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-50, new Node(-50,"End",NodeType.End,@"")},{-51, new Node(-51,"End",NodeType.End,@"")},{-52, new Node(-52,"End",NodeType.End,@"")},{-53, new Node(-53,"End",NodeType.End,@"")},{-54, new Node(-54,"End",NodeType.End,@"")},{-55, new Node(-55,"End",NodeType.End,@"")},{-56, new Node(-56,"Application Empirica >= 600 and Application Empirica <=609",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 600 and Variables::inputs.ApplicationEmpirica <= 609 then_newline_  Variables::outputs.LinkRateAdjustment = 0.012_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-57, new Node(-57,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-58, new Node(-58,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-59, new Node(-59,"Household Income Type = Salaried with Deduction",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.SalariedwithDeduction_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-60, new Node(-60,"Household Income Type = Salaried",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.Salaried then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-61, new Node(-61,"End",NodeType.End,@"")},{-62, new Node(-62,"Household Income Type = Salaried",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.Salaried then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-63, new Node(-63,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-64, new Node(-64,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-66, new Node(-66,"End",NodeType.End,@"")},{-67, new Node(-67,"End",NodeType.End,@"")},{-69, new Node(-69,"End",NodeType.End,@"")},{-70, new Node(-70,"End",NodeType.End,@"")},{-71, new Node(-71,"End",NodeType.End,@"")},{-72, new Node(-72,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-73, new Node(-73,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-74, new Node(-74,"Application Empirica >= 575 and Application Empirica <=594",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 594 then_newline_  Variables::outputs.LinkRateAdjustment = 0.010_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-75, new Node(-75,"Household Income Type = Salaried with Deduction",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.SalariedwithDeduction then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-76, new Node(-76,"End",NodeType.End,@"")},{-77, new Node(-77,"Household Income Type = Salaried",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.Salaried then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-78, new Node(-78,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-79, new Node(-79,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-81, new Node(-81,"End",NodeType.End,@"")},{-82, new Node(-82,"End",NodeType.End,@"")},{-84, new Node(-84,"End",NodeType.End,@"")},{-85, new Node(-85,"End",NodeType.End,@"")},{-86, new Node(-86,"End",NodeType.End,@"")},{-87, new Node(-87,"Application Empirica >= 630 and Application Empirica <=649",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 630 and Variables::inputs.ApplicationEmpirica <= 649 then_newline_  Variables::outputs.LinkRateAdjustment = 0.004_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-88, new Node(-88,"Application Empirica >= 610 and Application Empirica <=629",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 610 and Variables::inputs.ApplicationEmpirica <= 629 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-89, new Node(-89,"Application Empirica >= 575 and Application Empirica <=594",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 575 and Variables::inputs.ApplicationEmpirica <= 594 then_newline_  Variables::outputs.LinkRateAdjustment = 0.010_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-90, new Node(-90,"Household Income Type = Salaried with Deduction",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.SalariedwithDeduction then_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-80, new Node(-80,"Application Household Income Type is Self-Employed",NodeType.Decision,@"if Variables::inputs.HouseholdIncomeType == Enumerations::sAHomeLoans::householdIncomeType.SelfEmployed then_newline_  Variables::outputs.LinkRateAdjustment = 0_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.LinkRateAdjustment = 0_newline_  Variables::outputs.NodeResult = false_newline_end")},{-83, new Node(-83,"End",NodeType.End,@"")},{-91, new Node(-91,"Application Empirica >= 595 and Application Empirica <=630",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 595 and Variables::inputs.ApplicationEmpirica <= 630 then_newline_  Variables::outputs.LinkRateAdjustment = 0.006_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-92, new Node(-92,"End",NodeType.End,@"")},{-93, new Node(-93,"Application Empirica >= 595 and Application Empirica <=609",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 595 and Variables::inputs.ApplicationEmpirica <= 609 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-94, new Node(-94,"End",NodeType.End,@"")},{-95, new Node(-95,"Application Empirica >= 595 and Application Empirica <=609",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 595 and Variables::inputs.ApplicationEmpirica <= 609 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-96, new Node(-96,"End",NodeType.End,@"")},{-97, new Node(-97,"Application Empirica >= 595 and Application Empirica <=609",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 595 and Variables::inputs.ApplicationEmpirica <= 609 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")},{-98, new Node(-98,"End",NodeType.End,@"")},{-99, new Node(-99,"End",NodeType.End,@"")},{-100, new Node(-100,"Application Empirica >= 595 and Application Empirica <=609",NodeType.Decision,@"if Variables::inputs.ApplicationEmpirica >= 595 and Variables::inputs.ApplicationEmpirica <= 609 then_newline_  Variables::outputs.LinkRateAdjustment = 0.008_newline_  Variables::outputs.NodeResult = true_newline_else_newline_  Variables::outputs.NodeResult = false_newline_end")}};
            this.systemMessageCollection = messages;
            SubtreeMessagesDictionary = new Dictionary<string, ISystemMessageCollection>();
            SubtreeMessagesToClear = new List<string>();
        }		
    }
}