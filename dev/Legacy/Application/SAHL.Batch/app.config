<?xml version="1.0"?>
<configuration>
  <configSections>
     <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="WebApps" type="SAHL.Web.UI.Configuration.WebAppSection, SAHL.Web.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="SAHLFactories" type="SAHL.Common.Configuration.SAHLFactoriesSection, SAHL.Common"/>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="SAHL.Batch.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
      <section name="SAHL.Common.Service.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
      <section name="SAHL.Common.Logging.LogSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
      <section name="SAHL.X2.Framework.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>
  </configSections>
  <connectionStrings configSource="ConnectionStrings.config">
  </connectionStrings>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="DataAccess">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception"/>
        </exceptionTypes>
      </add>
      <add name="eWorkProvider">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception"/>
        </exceptionTypes>
      </add>
      <add name="Metric">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception"/>
        </exceptionTypes>
      </add>
      <add name="Reports">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add logCategory="General" eventId="101" severity="Error" title="Report Error Occured" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="EmailLogger"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Service Facade">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception">
            <exceptionHandlers>
              <add logCategory="General" eventId="100" severity="Error" title="Exception Occured" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="EmailLogger"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="UI Exception">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add logCategory="General" eventId="100" severity="Error" title="Exception Occured" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="EmailLogger"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <cachingConfiguration defaultCacheManager="Cache Manager">
    <cacheManagers>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="Null Storage" name="Cache Manager"/>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="SAHLPrincipalStore" name="SAHLPrincipalStore"/>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="FACTORY" name="FACTORY"/>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="UISTATEMENT" name="UISTATEMENT"/>
    </cacheManagers>
    <backingStores>
      <add encryptionProviderName="" name="SAHLPrincipalStore" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add encryptionProviderName="" name="FACTORY" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      <add encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null" name="Null Storage"/>
      <add encryptionProviderName="" name="UISTATEMENT" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    </backingStores>
  </cachingConfiguration>
  <SAHLFactories CreationStrategy="SAHL.Common.Factories.Strategies.DefaultStrategy, SAHL.Common">
    <Factories>
      <add Usage="Repository" AssemblyName="SAHL.Common.BusinessModel"/>
      <add Usage="Service" AssemblyName="SAHL.Common.Service"/>
    </Factories>
  </SAHLFactories>
  <applicationSettings>
    <SAHL.Batch.Properties.Settings>
      <setting name="ReportBatchFromEMail" serializeAs="String">
        <value>DataReportBatch@sahomeloans.com</value>
      </setting>
      <setting name="X2WorkFlowName" serializeAs="String">
        <value>CAP2 Offers</value>
      </setting>
      <setting name="X2ActivityName" serializeAs="String">
        <value>Create CAP2 lead</value>
      </setting>
      <setting name="X2ProcessName" serializeAs="String">
        <value>CAP2 Offers</value>
      </setting>
    </SAHL.Batch.Properties.Settings>
    <SAHL.Common.Service.Properties.Settings configSource="SAHL.Common.Service.config"/>
    <SAHL.X2.Framework.Properties.Settings configSource="SAHL.Common.X2.config"/>
  </applicationSettings>
  <appSettings>
    <add key="CultureToUse" value="en-ZA"/>
    <add key="DateSeparator" value="/" />
    <add key="ShortDatePattern" value="yyyy/MM/dd" />
    <add key="ShortTimePattern" value="hh:mm tt" />
    <add key="LongDatePattern" value="dd MMMM yyyy" />
    <add key="LongTimePattern" value="hh:mm:ss tt" />
    <add key="DecimalSeparator" value="." />
    <add key="ListSeparator" value="," />
    <add key="ApplicationName" value="SAHL.Batch"/>
    <add key="MessageServer" value="sahls47"/>
    <add key="messageBusUsername" value="admin" /> 
    <add key="messageBusPassword" value="W0rdpass" />     
    <!-- 0 - None, 1 - Errors Only, 2 - Warnings & Errors, 3 - Info, Warnings & Errors, 4 - Debug, Info, Warnings & Errors -->
    <add key="LogLevel" value="1"/>
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
</configuration>
