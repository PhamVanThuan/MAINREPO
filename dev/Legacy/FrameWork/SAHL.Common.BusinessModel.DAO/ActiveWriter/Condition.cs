//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAHL.Common.BusinessModel {
    using System;
    using System.Collections.Generic;
    using System.Collections;
    using Castle.ActiveRecord;
    
    
    [ActiveRecord("GenericKeyType", Lazy=true, Schema="dbo")]
    public partial class GenericKeyType : ActiveRecordBase<GenericKeyType> {
        
        private string _description;
        
        private string _tableName;
        
        private string _primaryKeyColumn;
        
        private int _cBOGenericKey;
        
        private int _genericKeyTypeKey;
        
        private IList<ConditionConfiguration> _conditionConfigurations;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Property("TableName", ColumnType="String")]
        public virtual string TableName {
            get {
                return this._tableName;
            }
            set {
                this._tableName = value;
            }
        }
        
        [Property("PrimaryKeyColumn", ColumnType="String")]
        public virtual string PrimaryKeyColumn {
            get {
                return this._primaryKeyColumn;
            }
            set {
                this._primaryKeyColumn = value;
            }
        }
        
        [Property("CBOGenericKey", ColumnType="Int32")]
        public virtual int CBOGenericKey {
            get {
                return this._cBOGenericKey;
            }
            set {
                this._cBOGenericKey = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "GenericKeyTypeKey", ColumnType="Int32")]
        public virtual int GenericKeyTypeKey {
            get {
                return this._genericKeyTypeKey;
            }
            set {
                this._genericKeyTypeKey = value;
            }
        }
        
        [HasMany(typeof(ConditionConfiguration), ColumnKey="GenericKeyTypeKey", Lazy=true, Table="ConditionConfiguration")]
        public virtual IList<ConditionConfiguration> ConditionConfigurations {
            get {
                return this._conditionConfigurations;
            }
            set {
                this._conditionConfigurations = value;
            }
        }
    }
    
    [ActiveRecord("ConditionConfiguration", Lazy=true, Schema="dbo")]
    public partial class ConditionConfiguration : ActiveRecordBase<ConditionConfiguration> {
        
        private int _genericColumnDefinitionValue;
        
        private int _conditionConfigurationKey;
        
        private GenericKeyType _genericKeyType;
        
        private GenericColumnDefinition _genericColumnDefinition;
        
        private IList<ConditionSet> _conditionConfigurations;
        
        [Property("GenericColumnDefinitionValue", ColumnType="Int32", NotNull=true)]
        public virtual int GenericColumnDefinitionValue {
            get {
                return this._genericColumnDefinitionValue;
            }
            set {
                this._genericColumnDefinitionValue = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "ConditionConfigurationKey", ColumnType="Int32")]
        public virtual int ConditionConfigurationKey {
            get {
                return this._conditionConfigurationKey;
            }
            set {
                this._conditionConfigurationKey = value;
            }
        }
        
        [BelongsTo("GenericKeyTypeKey", NotNull=false)]
        public virtual GenericKeyType GenericKeyType {
            get {
                return this._genericKeyType;
            }
            set {
                this._genericKeyType = value;
            }
        }
        
        [BelongsTo("GenericColumnDefinitionKey", NotNull=false)]
        public virtual GenericColumnDefinition GenericColumnDefinition {
            get {
                return this._genericColumnDefinition;
            }
            set {
                this._genericColumnDefinition = value;
            }
        }
        
        [HasAndBelongsToMany(typeof(ConditionSet), ColumnRef="ConditionSetKey", ColumnKey="ConditionConfigurationKey", Lazy=true, Schema="dbo", Table="ConditionConfigurationConditionSet")]
        public virtual IList<ConditionSet> ConditionConfigurations {
            get {
                return this._conditionConfigurations;
            }
            set {
                this._conditionConfigurations = value;
            }
        }
    }
    
    [ActiveRecord("GenericColumnDefinition", Lazy=true, Schema="dbo")]
    public partial class GenericColumnDefinition : ActiveRecordBase<GenericColumnDefinition> {
        
        private string _description;
        
        private string _tableName;
        
        private string _columnName;
        
        private int _genericColumnDefinitionKey;
        
        private IList<ConditionConfiguration> _conditionConfigurations;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Property("TableName", ColumnType="String", NotNull=true)]
        public virtual string TableName {
            get {
                return this._tableName;
            }
            set {
                this._tableName = value;
            }
        }
        
        [Property("ColumnName", ColumnType="String", NotNull=true)]
        public virtual string ColumnName {
            get {
                return this._columnName;
            }
            set {
                this._columnName = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "GenericColumnDefinitionKey", ColumnType="Int32")]
        public virtual int GenericColumnDefinitionKey {
            get {
                return this._genericColumnDefinitionKey;
            }
            set {
                this._genericColumnDefinitionKey = value;
            }
        }
        
        [HasMany(typeof(ConditionConfiguration), ColumnKey="GenericColumnDefinitionKey", Lazy=true, Table="ConditionConfiguration")]
        public virtual IList<ConditionConfiguration> ConditionConfigurations {
            get {
                return this._conditionConfigurations;
            }
            set {
                this._conditionConfigurations = value;
            }
        }
    }
    
    [ActiveRecord("ConditionSet", Lazy=true, Schema="dbo")]
    public partial class ConditionSet : ActiveRecordBase<ConditionSet> {
        
        private string _description;
        
        private int _conditionSetKey;
        
        private IList<ConditionSetCondition> _conditionSetConditions;
        
        private IList<ConditionConfiguration> _conditionSets;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "ConditionSetKey", ColumnType="Int32")]
        public virtual int ConditionSetKey {
            get {
                return this._conditionSetKey;
            }
            set {
                this._conditionSetKey = value;
            }
        }
        
        [HasMany(typeof(ConditionSetCondition), ColumnKey="ConditionSetKey", Lazy=true, Table="ConditionSetCondition")]
        public virtual IList<ConditionSetCondition> ConditionSetConditions {
            get {
                return this._conditionSetConditions;
            }
            set {
                this._conditionSetConditions = value;
            }
        }
        
        [HasAndBelongsToMany(typeof(ConditionConfiguration), ColumnRef="ConditionConfigurationKey", ColumnKey="ConditionSetKey", Lazy=true, Schema="dbo", Table="ConditionConfigurationConditionSet")]
        public virtual IList<ConditionConfiguration> ConditionSets {
            get {
                return this._conditionSets;
            }
            set {
                this._conditionSets = value;
            }
        }
    }
    
    [ActiveRecord("ConditionSetCondition", Lazy=true, Schema="dbo")]
    public partial class ConditionSetCondition : ActiveRecordBase<ConditionSetCondition> {
        
        private bool _requiredCondition;
        
        private int _conditionSetConditionKey;
        
        private ConditionSet _conditionSet;
        
        private Condition _condition;
        
        [Property("RequiredCondition", ColumnType="Boolean", NotNull=true)]
        public virtual bool RequiredCondition {
            get {
                return this._requiredCondition;
            }
            set {
                this._requiredCondition = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "ConditionSetConditionKey", ColumnType="Int32")]
        public virtual int ConditionSetConditionKey {
            get {
                return this._conditionSetConditionKey;
            }
            set {
                this._conditionSetConditionKey = value;
            }
        }
        
        [BelongsTo("ConditionSetKey", NotNull=false)]
        public virtual ConditionSet ConditionSet {
            get {
                return this._conditionSet;
            }
            set {
                this._conditionSet = value;
            }
        }
        
        [BelongsTo("ConditionKey", NotNull=false)]
        public virtual Condition Condition {
            get {
                return this._condition;
            }
            set {
                this._condition = value;
            }
        }
    }
    
    [ActiveRecord("Condition", Lazy=true, Schema="dbo")]
    public partial class Condition : ActiveRecordBase<Condition> {
        
        private string _conditionPhrase;
        
        private string _tokenDescriptions;
        
        private int _translatableItemKey;
        
        private string _conditionName;
        
        private int _conditionKey;
        
        private IList<ConditionSetCondition> _conditionSetConditions;
        
        private IList<ConditionToken> _conditionTokens;
        
        private ConditionType _conditionType;
        
        [Property("ConditionPhrase", ColumnType="String")]
        public virtual string ConditionPhrase {
            get {
                return this._conditionPhrase;
            }
            set {
                this._conditionPhrase = value;
            }
        }
        
        [Property("TokenDescriptions", ColumnType="String")]
        public virtual string TokenDescriptions {
            get {
                return this._tokenDescriptions;
            }
            set {
                this._tokenDescriptions = value;
            }
        }
        
        [Property("TranslatableItemKey", ColumnType="Int32")]
        public virtual int TranslatableItemKey {
            get {
                return this._translatableItemKey;
            }
            set {
                this._translatableItemKey = value;
            }
        }
        
        [Property("ConditionName", ColumnType="String")]
        public virtual string ConditionName {
            get {
                return this._conditionName;
            }
            set {
                this._conditionName = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "ConditionKey", ColumnType="Int32")]
        public virtual int ConditionKey {
            get {
                return this._conditionKey;
            }
            set {
                this._conditionKey = value;
            }
        }
        
        [HasMany(typeof(ConditionSetCondition), ColumnKey="ConditionKey", Lazy=true, Table="ConditionSetCondition")]
        public virtual IList<ConditionSetCondition> ConditionSetConditions {
            get {
                return this._conditionSetConditions;
            }
            set {
                this._conditionSetConditions = value;
            }
        }
        
        [HasMany(typeof(ConditionToken), ColumnKey="ConditionKey", Lazy=true, Table="ConditionToken")]
        public virtual IList<ConditionToken> ConditionTokens {
            get {
                return this._conditionTokens;
            }
            set {
                this._conditionTokens = value;
            }
        }
        
        [BelongsTo("ConditionTypeKey", NotNull=false)]
        public virtual ConditionType ConditionType {
            get {
                return this._conditionType;
            }
            set {
                this._conditionType = value;
            }
        }
    }
    
    [ActiveRecord("ConditionToken", Lazy=true, Schema="dbo")]
    public partial class ConditionToken : ActiveRecordBase<ConditionToken> {
        
        private int _conditionTokenKey;
        
        private Condition _condition;
        
        private Token _token;
        
        [PrimaryKey(PrimaryKeyType.Native, "ConditionTokenKey", ColumnType="Int32")]
        public virtual int ConditionTokenKey {
            get {
                return this._conditionTokenKey;
            }
            set {
                this._conditionTokenKey = value;
            }
        }
        
        [BelongsTo("ConditionKey", NotNull=false)]
        public virtual Condition Condition {
            get {
                return this._condition;
            }
            set {
                this._condition = value;
            }
        }
        
        [BelongsTo("TokenKey", NotNull=false)]
        public virtual Token Token {
            get {
                return this._token;
            }
            set {
                this._token = value;
            }
        }
    }
    
    [ActiveRecord("Token", Lazy=true, Schema="dbo")]
    public partial class Token : ActiveRecordBase<Token> {
        
        private string _description;
        
        private bool _mustTranslate;
        
        private int _tokenKey;
        
        private IList<ConditionToken> _conditionTokens;
        
        private ParameterType _parameterType;
        
        private StatementDefinition _statementDefinition;
        
        private TokenType _tokenType;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Property("MustTranslate", ColumnType="Boolean", NotNull=true)]
        public virtual bool MustTranslate {
            get {
                return this._mustTranslate;
            }
            set {
                this._mustTranslate = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "TokenKey", ColumnType="Int32")]
        public virtual int TokenKey {
            get {
                return this._tokenKey;
            }
            set {
                this._tokenKey = value;
            }
        }
        
        [HasMany(typeof(ConditionToken), ColumnKey="TokenKey", Lazy=true, Table="ConditionToken")]
        public virtual IList<ConditionToken> ConditionTokens {
            get {
                return this._conditionTokens;
            }
            set {
                this._conditionTokens = value;
            }
        }
        
        [BelongsTo("ParameterTypeKey", NotNull=false)]
        public virtual ParameterType ParameterType {
            get {
                return this._parameterType;
            }
            set {
                this._parameterType = value;
            }
        }
        
        [BelongsTo("StatementDefinitionKey", NotNull=false)]
        public virtual StatementDefinition StatementDefinition {
            get {
                return this._statementDefinition;
            }
            set {
                this._statementDefinition = value;
            }
        }
        
        [BelongsTo("TokenTypeKey", NotNull=false)]
        public virtual TokenType TokenType {
            get {
                return this._tokenType;
            }
            set {
                this._tokenType = value;
            }
        }
    }
    
    [ActiveRecord("ParameterType", Lazy=true, Schema="dbo")]
    public partial class ParameterType : ActiveRecordBase<ParameterType> {
        
        private string _description;
        
        private string _sQLDataType;
        
        private string _cSharpDataType;
        
        private int _parameterTypeKey;
        
        private IList<StatementParameter> _statementParameters;
        
        private IList<Token> _tokens;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Property("SQLDataType", ColumnType="String", NotNull=true)]
        public virtual string SQLDataType {
            get {
                return this._sQLDataType;
            }
            set {
                this._sQLDataType = value;
            }
        }
        
        [Property("CSharpDataType", ColumnType="String")]
        public virtual string CSharpDataType {
            get {
                return this._cSharpDataType;
            }
            set {
                this._cSharpDataType = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "ParameterTypeKey", ColumnType="Int32")]
        public virtual int ParameterTypeKey {
            get {
                return this._parameterTypeKey;
            }
            set {
                this._parameterTypeKey = value;
            }
        }
        
        [HasMany(typeof(StatementParameter), ColumnKey="ParameterTypeKey", Lazy=true, Table="StatementParameter")]
        public virtual IList<StatementParameter> StatementParameters {
            get {
                return this._statementParameters;
            }
            set {
                this._statementParameters = value;
            }
        }
        
        [HasMany(typeof(Token), ColumnKey="ParameterTypeKey", Lazy=true, Table="Token")]
        public virtual IList<Token> Tokens {
            get {
                return this._tokens;
            }
            set {
                this._tokens = value;
            }
        }
    }
    
    [ActiveRecord("StatementParameter", Lazy=true, Schema="dbo")]
    public partial class StatementParameter : ActiveRecordBase<StatementParameter> {
        
        private string _parameterName;
        
        private int _parameterLength;
        
        private string _displayName;
        
        private bool _required;
        
        private int _statementParameterKey;
        
        private ParameterType _parameterType;
        
        private StatementDefinition _statementDefinition;
        
        private StatementDefinition _statementDefinition;
        
        [Property("ParameterName", ColumnType="String", NotNull=true)]
        public virtual string ParameterName {
            get {
                return this._parameterName;
            }
            set {
                this._parameterName = value;
            }
        }
        
        [Property("ParameterLength", ColumnType="Int32")]
        public virtual int ParameterLength {
            get {
                return this._parameterLength;
            }
            set {
                this._parameterLength = value;
            }
        }
        
        [Property("DisplayName", ColumnType="String")]
        public virtual string DisplayName {
            get {
                return this._displayName;
            }
            set {
                this._displayName = value;
            }
        }
        
        [Property("Required", ColumnType="Boolean", NotNull=true)]
        public virtual bool Required {
            get {
                return this._required;
            }
            set {
                this._required = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "StatementParameterKey", ColumnType="Int32")]
        public virtual int StatementParameterKey {
            get {
                return this._statementParameterKey;
            }
            set {
                this._statementParameterKey = value;
            }
        }
        
        [BelongsTo("ParameterTypeKey", NotNull=false)]
        public virtual ParameterType ParameterType {
            get {
                return this._parameterType;
            }
            set {
                this._parameterType = value;
            }
        }
        
        [BelongsTo("PopulationStatementDefinitionKey", NotNull=false)]
        public virtual StatementDefinition StatementDefinition {
            get {
                return this._statementDefinition;
            }
            set {
                this._statementDefinition = value;
            }
        }
        
        [BelongsTo("StatementDefinitionKey", NotNull=false)]
        public virtual StatementDefinition StatementDefinition {
            get {
                return this._statementDefinition;
            }
            set {
                this._statementDefinition = value;
            }
        }
    }
    
    [ActiveRecord("StatementDefinition", Lazy=true, Schema="dbo")]
    public partial class StatementDefinition : ActiveRecordBase<StatementDefinition> {
        
        private string _description;
        
        private string _applicationName;
        
        private string _statementName;
        
        private int _statementDefinitionKey;
        
        private IList<StatementParameter> _statementParameters;
        
        private IList<StatementParameter> _statementParameters;
        
        private IList<Token> _tokens;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Property("ApplicationName", ColumnType="String", NotNull=true)]
        public virtual string ApplicationName {
            get {
                return this._applicationName;
            }
            set {
                this._applicationName = value;
            }
        }
        
        [Property("StatementName", ColumnType="String", NotNull=true)]
        public virtual string StatementName {
            get {
                return this._statementName;
            }
            set {
                this._statementName = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "StatementDefinitionKey", ColumnType="Int32")]
        public virtual int StatementDefinitionKey {
            get {
                return this._statementDefinitionKey;
            }
            set {
                this._statementDefinitionKey = value;
            }
        }
        
        [HasMany(typeof(StatementParameter), ColumnKey="PopulationStatementDefinitionKey", Lazy=true, Table="StatementParameter")]
        public virtual IList<StatementParameter> StatementParameters {
            get {
                return this._statementParameters;
            }
            set {
                this._statementParameters = value;
            }
        }
        
        [HasMany(typeof(StatementParameter), ColumnKey="StatementDefinitionKey", Lazy=true, Table="StatementParameter")]
        public virtual IList<StatementParameter> StatementParameters {
            get {
                return this._statementParameters;
            }
            set {
                this._statementParameters = value;
            }
        }
        
        [HasMany(typeof(Token), ColumnKey="StatementDefinitionKey", Lazy=true, Table="Token")]
        public virtual IList<Token> Tokens {
            get {
                return this._tokens;
            }
            set {
                this._tokens = value;
            }
        }
    }
    
    [ActiveRecord("TokenType", Lazy=true, Schema="dbo")]
    public partial class TokenType : ActiveRecordBase<TokenType> {
        
        private string _description;
        
        private string _userID;
        
        private bool _runStatement;
        
        private int _tokenTypeKey;
        
        private IList<Token> _tokens;
        
        [Property("Description", ColumnType="String", NotNull=true)]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [Property("UserID", ColumnType="String", NotNull=true)]
        public virtual string UserID {
            get {
                return this._userID;
            }
            set {
                this._userID = value;
            }
        }
        
        [Property("RunStatement", ColumnType="Boolean", NotNull=true)]
        public virtual bool RunStatement {
            get {
                return this._runStatement;
            }
            set {
                this._runStatement = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "TokenTypeKey", ColumnType="Int32")]
        public virtual int TokenTypeKey {
            get {
                return this._tokenTypeKey;
            }
            set {
                this._tokenTypeKey = value;
            }
        }
        
        [HasMany(typeof(Token), ColumnKey="TokenTypeKey", Lazy=true, Table="Token")]
        public virtual IList<Token> Tokens {
            get {
                return this._tokens;
            }
            set {
                this._tokens = value;
            }
        }
    }
    
    [ActiveRecord("ConditionType", Lazy=true, Schema="dbo")]
    public partial class ConditionType : ActiveRecordBase<ConditionType> {
        
        private string _description;
        
        private int _conditionTypeKey;
        
        private IList<Condition> _conditions;
        
        [Property("Description", ColumnType="String")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        [PrimaryKey(PrimaryKeyType.Native, "ConditionTypeKey", ColumnType="Int32")]
        public virtual int ConditionTypeKey {
            get {
                return this._conditionTypeKey;
            }
            set {
                this._conditionTypeKey = value;
            }
        }
        
        [HasMany(typeof(Condition), ColumnKey="ConditionTypeKey", Lazy=true, Table="Condition")]
        public virtual IList<Condition> Conditions {
            get {
                return this._conditions;
            }
            set {
                this._conditions = value;
            }
        }
    }
}
