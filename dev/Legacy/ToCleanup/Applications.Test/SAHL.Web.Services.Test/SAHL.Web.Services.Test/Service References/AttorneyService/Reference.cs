//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAHL.Web.Services.Test.AttorneyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/SAHL.Web.Services")]
    [System.SerializableAttribute()]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SAHL.Web.Services.Test.AttorneyService.ServiceMessage[] ServiceMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SAHL.Web.Services.Test.AttorneyService.ServiceMessage[] ServiceMessages {
            get {
                return this.ServiceMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceMessagesField, value) != true)) {
                    this.ServiceMessagesField = value;
                    this.RaisePropertyChanged("ServiceMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceMessage", Namespace="http://schemas.datacontract.org/2004/07/SAHL.Web.Services")]
    [System.SerializableAttribute()]
    public partial class ServiceMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AttorneyService.IAttorney")]
    public interface IAttorney {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttorney/Login", ReplyAction="http://tempuri.org/IAttorney/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttorney/RegisterUser", ReplyAction="http://tempuri.org/IAttorney/RegisterUserResponse")]
        bool RegisterUser(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttorney/RenderSQLReport", ReplyAction="http://tempuri.org/IAttorney/RenderSQLReportResponse")]
        byte[] RenderSQLReport(int reportkey, System.Collections.Generic.Dictionary<string, string> sqlReportParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttorney/ForgottenPassword", ReplyAction="http://tempuri.org/IAttorney/ForgottenPasswordResponse")]
        bool ForgottenPassword(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttorney/TestServiceResponse", ReplyAction="http://tempuri.org/IAttorney/TestServiceResponseResponse")]
        SAHL.Web.Services.Test.AttorneyService.ServiceResponse TestServiceResponse();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttorney/UpdateLE", ReplyAction="http://tempuri.org/IAttorney/UpdateLEResponse")]
        void UpdateLE();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAttorneyChannel : SAHL.Web.Services.Test.AttorneyService.IAttorney, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AttorneyClient : System.ServiceModel.ClientBase<SAHL.Web.Services.Test.AttorneyService.IAttorney>, SAHL.Web.Services.Test.AttorneyService.IAttorney {
        
        public AttorneyClient() {
        }
        
        public AttorneyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AttorneyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AttorneyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AttorneyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public bool RegisterUser(string emailAddress) {
            return base.Channel.RegisterUser(emailAddress);
        }
        
        public byte[] RenderSQLReport(int reportkey, System.Collections.Generic.Dictionary<string, string> sqlReportParameters) {
            return base.Channel.RenderSQLReport(reportkey, sqlReportParameters);
        }
        
        public bool ForgottenPassword(string userName) {
            return base.Channel.ForgottenPassword(userName);
        }
        
        public SAHL.Web.Services.Test.AttorneyService.ServiceResponse TestServiceResponse() {
            return base.Channel.TestServiceResponse();
        }
        
        public void UpdateLE() {
            base.Channel.UpdateLE();
        }
    }
}
