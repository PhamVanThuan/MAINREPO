@helper attributes(object element)
{
    var tileElement = element as SAHL.Core.UI.Elements.Tiles.AbstractTileElement;
    if (tileElement != null)
    {
    <text>data-tilemodeltypename="@tileElement.TileModelType.AssemblyQualifiedName"</text>
    <text>data-tileconfigtypename="@tileElement.TileConfigurationType.AssemblyQualifiedName"</text>
    <text>data-url="@tileElement.Url"</text>
        if (tileElement.TileModelType.GetInterfaces().Any(x => x == typeof(SAHL.Core.UI.Models.IDrillPreviewTileModel)))
        {
    <text>data-has-peek="true"</text>
        }
    }
    var businessElement = element as SAHL.Core.UI.Elements.IElement;
    if (businessElement != null && businessElement.BusinessContext != null)
    {
    <text>data-business-key="@businessElement.BusinessContext.BusinessKey.Key" data-business-keytype="@businessElement.BusinessContext.BusinessKey.KeyType"</text>
    }
    if (businessElement != null && businessElement.BusinessContext != null)
    {
    <text>data-business-key="@businessElement.BusinessContext.BusinessKey.Key" data-business-keytype="@businessElement.BusinessContext.BusinessKey.KeyType"</text>
    }
    var urlElement = element as SAHL.Core.UI.Elements.IUrlElement;
    if (urlElement != null)
    {
    <text>data-action="@urlElement.UrlAction" data-action-url="@urlElement.Url"</text>
    }
    var selectableElement = element as SAHL.Core.UI.Elements.ISelectable;
    if (selectableElement != null)
    {
    <text>data-</text>@(selectableElement.Selected ? "active" : "");
    }
    var dynamicContextMenuElement = element as SAHL.Core.UI.Elements.Menus.TileDynamicContextMenuItemElement;
    if (dynamicContextMenuElement != null)
    {
    <text>data-tilemodeltypename="@dynamicContextMenuElement.TileBusinessContext.TileModelType.AssemblyQualifiedName"</text>
    <text>data-tileconfigtypename="@dynamicContextMenuElement.TileBusinessContext.TileConfigurationType.AssemblyQualifiedName"</text>
    }
    var editorElement = element as SAHL.Core.UI.Elements.Editors.EditorElement;
    if (editorElement != null)
    {
    <text>data-editormodeltypename="@editorElement.EditorModelType.AssemblyQualifiedName"</text>
    <text>data-editormodelconfigurationtypename="@editorElement.EditorModelConfigurationType.AssemblyQualifiedName"</text>
    }
    var uiEditorPageModel = element as SAHL.Core.UI.Models.IUIEditorPageModel;
    if (uiEditorPageModel != null)
    {
    <text>data-editorpagemodeltypename="@uiEditorPageModel.EditorPageModel.GetType().AssemblyQualifiedName"</text>
    }
    var userRole = element as SAHL.Core.UI.UserState.Models.UserRole;
    if (userRole != null)
    {
    <text>data-organisationArea="@userRole.OrganisationArea"</text>
    <text>data-roleName="@userRole.RoleName"</text>
    }
}