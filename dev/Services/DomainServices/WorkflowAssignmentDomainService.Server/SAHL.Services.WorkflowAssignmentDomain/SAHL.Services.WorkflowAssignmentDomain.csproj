<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3809B035-1623-4A0D-AF64-5B944BED9F5A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SAHL.Services.WorkflowAssignmentDomain</RootNamespace>
    <AssemblyName>SAHL.Services.WorkflowAssignmentDomain</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=4.5.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\ExternalBinaries\Newtonsoft.Json\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Config.Data.Dapper">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Config.Data.Dapper.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.BusinessModel">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.BusinessModel.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data.Dapper">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.Dapper.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data.Models.2AM">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.Models.2AM.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data.Models.X2">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.Models.X2.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Events, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Events.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Messaging.Shared">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Messaging.Shared.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.DomainServiceChecks, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.DomainServiceChecks.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Services.Interfaces.WorkflowAssignmentDomain, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Services.Interfaces.WorkflowAssignmentDomain.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CommandHandlers\NotificationOfInstanceStaticWorkflowAssignmentCommandHandler.cs" />
    <Compile Include="CommandHandlers\ReturnInstanceToLastUserInCapabilityCommandHandler.cs" />
    <Compile Include="CommandHandlers\AssignWorkflowCaseCommandHandler.cs" />
    <Compile Include="Managers\Statements\GetActiveUsersWithCapabilitySqlStatement.cs" />
    <Compile Include="QueryStatements\GetActiveUsersWithCapabilityStatement.cs" />
    <Compile Include="Managers\Statements\GetADUserByOrganisationStructureKeyStatement.cs" />
    <Compile Include="Managers\Statements\GetLastAssignedUserByCapabilityForInstanceStatement.cs" />
    <Compile Include="QueryStatements\GetUserCurrentlyAssignedInCapabilityQueryStatement.cs" />
    <Compile Include="QueryStatements\GetCurrentlyAssignedUserForInstanceStatement.cs" />
    <Compile Include="Rules\Models\UserHasCapabilityRuleModel.cs" />
    <Compile Include="Managers\Statements\GetCapabilitiesForUserOrganisationStructureKeyStatement.cs" />
    <Compile Include="Managers\IWorkflowCaseDataManager.cs" />
    <Compile Include="Managers\Statements\AssignWorkflowCaseStatement.cs" />
    <Compile Include="Managers\WorkflowCaseDataManager.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Rules\CapabilityMustHavePreviouslyWorkedOnTheInstanceRule.cs" />
    <Compile Include="Rules\UserOrganisationStrutcureKeyShouldBelongToActiveADUserRule.cs" />
    <Compile Include="Rules\UserOrganisationStructureMustHaveCapabilityRule.cs" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="CommandHandlers\Internal\" />
    <Folder Include="QueryHandlers\" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>xcopy "$(ProjectDir)\$(OutDir)\$(ProjectName).*" /f "$(SolutionDir)\..\..\..\Binaries\InternalBinaries\" /d /Y</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>