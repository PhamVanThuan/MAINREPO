<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3809B035-1623-4A0D-AF64-5B944BED9F5A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SAHL.Services.BankAccountDomain</RootNamespace>
    <AssemblyName>SAHL.Services.BankAccountDomain</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Dapper">
      <HintPath>..\..\..\..\Binaries\ExternalBinaries\Dapper\lib\net45\Dapper.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.BusinessModel">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.BusinessModel.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data.Dapper">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.Dapper.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Data.Models.2AM">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Data.Models.2AM.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Events, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Events.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Core.Messaging.Shared">
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Core.Messaging.Shared.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.DomainServiceChecks, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.DomainServiceChecks.dll</HintPath>
    </Reference>
    <Reference Include="SAHL.Services.Interfaces.BankAccountDomain, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\Binaries\InternalBinaries\SAHL.Services.Interfaces.BankAccountDomain.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CommandHandlers\Internal\AddBankAccountCommandHandler.cs" />
    <Compile Include="CommandHandlers\LinkBankAccountToClientCommandHandler.cs" />
    <Compile Include="Managers\BankAccountDataManager.cs" />
    <Compile Include="Managers\IBankAccountDataManager.cs" />
    <Compile Include="Utils\ExceptionRoutines\ExceptionRoutineA.cs" />
    <Compile Include="Utils\ExceptionRoutines\ExceptionRoutineC.cs" />
    <Compile Include="Utils\ExceptionRoutines\ExceptionRoutineF.cs" />
    <Compile Include="Utils\ExceptionRoutines\ExceptionRoutineG.cs" />
    <Compile Include="Utils\ExceptionRoutines\ExceptionRoutineH.cs" />
    <Compile Include="Utils\ICdvValidationManager.cs" />
    <Compile Include="Managers\Statements\GetBankAccountStatement.cs" />
    <Compile Include="Managers\Statements\GetBranchStatement.cs" />
    <Compile Include="Managers\Statements\GetClientBankAccountsStatement.cs" />
    <Compile Include="Managers\Statements\UpdateClientBankAccountStatusStatement.cs" />
    <Compile Include="Managers\CDVDataManager.cs" />
    <Compile Include="Utils\CdvValidationManager.cs" />
    <Compile Include="Managers\ICDVDataManager.cs" />
    <Compile Include="Managers\Statements\SelectACBBankForACBBranchStatement.cs" />
    <Compile Include="Managers\Statements\SelectAccountIndicationsStatement.cs" />
    <Compile Include="Managers\Statements\SelectAccountTypeRecognitionForACBBankStatement.cs" />
    <Compile Include="Managers\Statements\SelectCDVExceptionsForCDVStatement.cs" />
    <Compile Include="Managers\Statements\SelectCDVForACBBankStatement.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Rules\BankAccountMustAdhereToCDVValidationRule.cs" />
    <Compile Include="Utils\ExceptionRoutines\IExceptionRoutine.cs" />
    <Compile Include="Utils\ValidationUtilities.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>xcopy "$(ProjectDir)\$(OutDir)\$(ProjectName).*" /f "$(SolutionDir)\..\..\..\Binaries\InternalBinaries\" /d /Y</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>