@model System.Collections.Generic.IDictionary<Guid, SAHL.Core.Logging.ILoggerSource>
@{
    this.Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Logging Sources";
}
<div class="container-fluid">
    <h1>Logging Sources</h1>

    @foreach (var item in Model)
    {
        <div class="well well-sm">
            <h4>@item.Value.Name</h4>

            <div class="row">
                <div class="col-md-4">Log Level</div>
                <div class="col-md-8">
                    <div class="btn-group" data-key="@item.Key">
                        @foreach (SAHL.Core.Logging.LogLevel level in Enum.GetValues(typeof(SAHL.Core.Logging.LogLevel)))
                        {
                            <button type="button" class="btn btn-default  @(item.Value.LogLevel == level ? "active" : "")" data-value="true">@level</button>
                        }
                    </div>
                </div>
            </div>
            <div class="row" style="padding-top:10px">

                <div class="col-md-4">Log Metrics</div>
                <div class="col-md-8">
                    <div class="btn-group" data-key="@item.Key">
                        <button type="button" class="btn btn-default  @(item.Value.LogMetrics ? "active" : "")" data-value="true">Enabled</button>
                        <button type="button" class="btn btn-default  @(item.Value.LogMetrics ? "" : "active")" data-value="false">Disabled</button>
                    </div>
                </div>
            </div>
        </div>

    }


</div>



<script type="text/jscript">
    $(function () {
        $('[name=LogLevel]').change(function () {
            var self = this;
            console.log("LogLevel", self)
            console.log("selected item", $(self).children("option:selected").val())
            $.ajax({
                url: 'Logging/ChangeLogLevel',
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                data: "{'Key' : '" + $(self).prop("id") + "' ,logLevel : '" + $(self).children("option:selected").val() + "' }",
                xhrFields: {
                    withCredentials: true
                },
                success: function (data) { console.log('success', this); },
                error: function (req, status, error) {
                    console.log('error');
                }
            });
        });

        $(".btn-group > .btn").click(function () {
            var self = $(this);
            $.ajax({
                url: 'Logging/ChangeLogMetrics',
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                data: "{'Key' : '" + self.parent().data("key") + "' ,logMetrics : '" + self.data("value") + "' }",
                xhrFields: {
                    withCredentials: true
                },
                success: function (data) {
                    self.addClass("active").siblings().removeClass("active");
                    console.log('success', this);
                },
                error: function (req, status, error) {
                    console.log('error');
                }
            });
            console.log("button Key", self.parent().data("key"));
        });

    });
</script>