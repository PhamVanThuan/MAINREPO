@using System.Web.Mvc.Html

@helper Doughnut(long count,string text){
    <div class="dough" data-field="@count"></div>
    <text><b>@count</b> Requests Made for<br />the last @text</text>
}

@helper Analytics(SAHL.Core.Metrics.IHistogramMetric metric,string text)
{
    <div class="analytics" data-field="[@metric.Values.Select(x => string.Format("{{\"name\" : \"{0} ms latency\",\"value\" : {0}}}", (x == 0 ? 0.1 : x))).Aggregate((i, j) => i + "," + j)]"></div>
    <text>Biased Latency Sample (@text Rate)</text>
}

@helper AverageRequests(SAHL.Core.Metrics.ITimerMetric metric,string text)
{
    <h2>@(metric != null ? Math.Round(metric.MeanRate,1) : 0)</h2>
    <text>Average Command Requests<br />Per @text</text>
}

@helper Latency(double latency,string text)
{
    <h2>@(latency == 0 ? "~0.1" : Math.Round(latency, 1).ToString()) ms</h2>
    <b>@text Command Handler Latency</b>
}

@helper IsSelected(int selectedPage,int index)
{
    if ((selectedPage) == index)
    {
        <text>class="selected"</text>
    }
}
