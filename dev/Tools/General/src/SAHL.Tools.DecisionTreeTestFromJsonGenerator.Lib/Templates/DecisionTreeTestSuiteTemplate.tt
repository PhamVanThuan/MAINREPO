<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;
using SAHL.Tools.DecisionTree.TestRunner.Interfaces;
using SAHL.DecisionTree.TreeTests.Models;

namespace <#= this.Namespace #>
{
    public class <#= this.TestSuiteName #> : ITestSuite
    {
        public IEnumerable<ITestCase> TestCases { get; set; }
    
        public <#= this.TestSuiteName #>()
        {
            this.TestCases = new List<ITestCase> 
            {
<# foreach (var testCase in TestCases) { #>
                new TestCase("<#= testCase.Name #>", 
                    new List<ITestInput> { 

<# foreach(var input in testCase.Inputs) { #>
                        new TestInput ("<#= input.Name #>", "<#= input.Type #>", "<#= input.Value #>")<# if(input!=testCase.Inputs.Last()) { #>,
<# } #>
<# } #>

                    },
                    new List<IScenario> {
<# foreach(var scenario in testCase.Scenarios) { #>
                        new Scenario("<#= scenario.Name #>",
                            new List<ITestInput> { 
<# foreach(var inputVar in scenario.Inputs) { #>
                                new TestInput("<#= inputVar.Name #>", "<#= inputVar.Type #>", "<#= inputVar.Value #>")<# if(inputVar!=scenario.Inputs.Last()) { #>,
<# } #>
<# } #>

                            },
                            new List<ITestOutput> {
<# foreach(var outputVar in scenario.ExpectedOutputs) { #> 
                                new TestOutput("<#= outputVar.Name #>", "<#= outputVar.Assertion #>", "<#= outputVar.Type #>", "<#= outputVar.ExpectedValue #>")<# if(outputVar!=scenario.ExpectedOutputs.Last()) { #>,
<# } #>
<# } #>

                            },
                            new List<IOutputMessage> {
<# foreach(var outputMessage in scenario.ExpectedMessages) { #>
                                new OutputMessage("<#= outputMessage.ExpectedMessage #>", "<#= outputMessage.Assertion #>", "<#= outputMessage.ExpectedMessageSeverity #>")<# if(outputMessage!= scenario.ExpectedMessages.Last()) { #>,
<# } #>
<# } #>

                            },
                            new List<ISubtreeExpectation> {
<# foreach(var expectedSubtree in scenario.SubtreeExpectations) { #>
                                new SubtreeExpectation("<#= expectedSubtree.Name #>", "<#= expectedSubtree.Assertion #>")<# if(expectedSubtree != scenario.SubtreeExpectations.Last()) { #>,
<# } #>
<# } #>

                            })<# if (scenario != testCase.Scenarios.Last()) { #>,
<# } #>
<# } #>

                    })<# if(testCase != TestCases.Last()) { #>,
<# } #>
<# } #>

            };
        }
    }
}


 