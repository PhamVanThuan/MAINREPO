'use strict';

<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SAHL.Tools.Capitec.CSJsonifier" #>
angular.module('<#=this.NamespaceProvider.Namespace#>.<#=this.Result.Type.ToLower()#>', []).
    factory('$<#= TextHelper.PascalCase(this.NamespaceProvider.Prefix + this.Result.Type)#>', [function () {
        var shared = (function () {
            <#= this.generatedCode #>
            return {
                <#= this.Result.CommandTypes.Count > 0 ? this.Result.CommandTypes.Select(x=> string.Format("{0}: {0}",x.Name)).Aggregate((current, next) => current + ",\r\n\t\t\t\t" + next) : ""#>
            };
        }());
        return shared;
    }])<#if(this.Result.UseContainer){#>.
    factory('$<#= TextHelper.PascalCase(this.NamespaceProvider.Prefix + this.Result.Type)#>Container', ['$<#= TextHelper.PascalCase(this.NamespaceProvider.Prefix + this.Result.Type)#>',function ($<#= TextHelper.PascalCase(this.NamespaceProvider.Prefix + this.Result.Type)#>) {
        var shared = (function () {
            var Container = {
                <#= this.Result.CommandTypes.Count > 0 ? this.Result.CommandTypes.Select(x=> string.Format("'{0},{1}': ${2}.{3}",x.FullName,x.Module.Assembly.Name.Name,TextHelper.PascalCase(this.NamespaceProvider.Prefix + this.Result.Type),x.Name)).Aggregate((current, next) => current + ",\r\n\t\t\t\t" + next) : ""#>
            }
            return {
                Container : Container
            };
        }());
        return shared;
    }])<#}#>;