<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.11.0"
    xmlns:local="clr-namespace:SAHomeloans.SAHL_VSExtensions.Controls"
    xmlns:theme="clr-namespace:SAHomeloans.SAHL_VSExtensions.Themes"
>

    <Style x:Key="VsMenuBaseGroup" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            Height="25"
>
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Left"
                                          Margin="25,0,0,0"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogContentForeground}}"
 />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VsMenuBaseItem" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            Height="25"
>

                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Left"
                                          Margin="40,0,0,0"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogContentForeground}}"
 />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VsMenuButtonGroupSelected" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource VsMenuBaseGroup}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogWonderbarTreeInactiveSelected}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogBackground}}" />
    </Style>

    <Style x:Key="VsMenuButtonGroup" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource VsMenuBaseGroup}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogBackground}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogBackground}}" />
    </Style>

    <Style x:Key="VsMenuButtonItemSelected" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource VsMenuBaseItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogContentSelected}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogWonderbar}}" />
    </Style>

    <Style x:Key="VsMenuButtonItem" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource VsMenuBaseItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogWonderbar}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogWonderbar}}" />
    </Style>

    <Style TargetType="{x:Type local:VsMenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VsMenuItem}">
                    <StackPanel Background="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogBackground}}">
                        <ToggleButton x:Name="btn_Name" ClickMode="Press" Content="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ItemsPresenter x:Name="ctrl_Content" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ctrl_Content" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btn_Name" Property="IsChecked" Value="false"></Condition>
                                <Condition Property="IsGroup" Value="true"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btn_Name" Property="Style" Value="{StaticResource VsMenuButtonGroup}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btn_Name" Property="IsChecked" Value="true"></Condition>
                                <Condition Property="IsGroup" Value="true"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btn_Name" Property="Style" Value="{StaticResource VsMenuButtonGroupSelected}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btn_Name" Property="IsChecked" Value="false"></Condition>
                                <Condition Property="IsGroup" Value="false"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btn_Name" Property="Style" Value="{StaticResource VsMenuButtonItem}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btn_Name" Property="IsChecked" Value="true"></Condition>
                                <Condition Property="IsGroup" Value="false"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btn_Name" Property="Style" Value="{StaticResource VsMenuButtonItemSelected}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:VsMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VsMenu}">
                    <Border Background="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogBackground}}"
                            BorderBrush="{DynamicResource {x:Static theme:ThemeHelper.NewProjectDialogBackground}}"
                            BorderThickness="1"
>
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>