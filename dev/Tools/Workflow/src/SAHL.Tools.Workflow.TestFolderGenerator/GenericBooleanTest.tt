<#@ template debug="false" hostspecific="false" language="C#" #>
using Machine.Specifications;

namespace WorkflowMaps.<#=WorkflowName#>.Specs.<#=ParentFolderName#>.<#=MakeSafe(SafeName)#>.<#=SectionName#>
{
    [Subject("<#=ParentFolderType#> => <#=SafeName#> => <#=SectionName#>")] // AutoGenerated
    internal class when_<#=SafeNameLowered#> : WorkflowSpec<#=WorkflowName#>
    {
        static bool result;
        Establish context = () =>
        {
            result = <#=(!CodeSectionResult).ToString().ToLower()#>;
        };
		
<#if(SectionName != "OnComplete"){#>
        Because of = () =>
        {
            result = workflow.<#=SectionNamePrefix#>_<#=SafeName#>(instanceData, workflowData, paramsData, messages);
        };
<#}else{#>
        Because of = () =>
        {
			string message = string.Empty;
            result = workflow.<#=SectionNamePrefix#>_<#=SafeName#>(instanceData, workflowData, paramsData, messages, ref message);
        };
<#}#>

        It should_return_<#=CodeSectionResult.ToString().ToLower()#> = () =>
        {
            result.ShouldBe<#=ToPropertyCase(CodeSectionResult.ToString())#>();
        };
    }
}